# ***전체적인 부분***



1\. 캐릭터 이름 정하기

2\. 캐릭터 이름 setter를 통해 수정할 수 있도록 함.

3\. 다양한 모션을 하도록 설계.

4\. 0을 입력하면 종료, 몬스터 죽여도 종료.

5\. 아이템이 없으면 사용 못하게 구성 추가.

6\. 중복으로 누르면 중복으로 사용되게 설정.



\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*

>모험가의 닉네임을 입력해주세요: 장용석

>모험가 닉네임은 장용석입니다.

\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*



>1. 모험가 닉네임 변경

>2. 체력회복 물약 획득

>3. 체력회복 물약 사용

>4. 몬스터 공격하기

>5. 현재 상태창 보기



어떤 동작을 실행하시겠습니까? (0:종료) : 2

>체력회복 물약을 획득했습니다.

>현재 아이템 개수: 1

어떤 동작을 실행하시겠습니까? (0:종료) : 3

>체력회복 물약을 사용합니다.

>현재 HP : 40

>남은 물약 갯수 : 0

어떤 동작을 실행하시겠습니까? (0:종료) : 4

>주사위를 굴립니다 : 10

>성공!

>몬스터를 공격합니다.

>남은 몬스터 HP : 10

>체력을 잃었습니다.

>남은 HP : 40

어떤 동작을 실행하시겠습니까? (0:종료) : 5

< Information >

>name : 장용석

>HP\_item : 0

> HP : 40

어떤 동작을 실행하시겠습니까? (0:종료) : 0

>게임 종료



이렇게 각 숫자별로 역할 부여해서 class로 불러오게 하고 아이템 없으면 사용하지 못하게 if문도 추가하면 좋을듯

또 중복으로 누르면 10, 20, 30 이렇게 증가하게 구성하는 것도 좋을듯



***캐릭터 클래스***는 모든 캐릭터(플레이어/적)의 공통속성과 공통행동(체력, 공격, 방어, 위치, 피해 처리 등)을 담당하는 추상 기반 클래스. 캐릭터 클래스 시스템을 사용하는 RPG에서는 게임이 진행되는 동안 플레이어가 해당 클래스를 얻을 수 있도록 체계를 단계적으로 세분화하기도 함.





***에너미 클래스***는 캐릭터를 상속받아 적 전용 속성(행동 패턴, 경험치 드랍 등)과 AI(행동 선택)를 구현.



##### ***간단한 코드***



\#include <iostream>

using namespace std;



class Character //객체 상태 동작

{

string name;

int hp\_item = 5;

int hp = 50;

int mon\_hp = 50;



public: //상태 개념

Character(string name) //생성자(메서드): 객체 생성될 때 자동으로 호출되는 메서드

{

this->name =name;

cout << ">모험가 닉네임은 " << name << "입니다." << endl;

}



{ //모험가 닉네임 변경

this->name = name;

cout << ">모험가 닉네임은 " << this->name << "입니다." << endl;

}



void item\_up() //메소드 : 클래스 내에 선언된 함수

{ //모험가 회복물약 획득

item\_num++;

cout << ">장용석이 회복물약을 획득했습니다." << endl;

cout << ">남은 물약 갯수: " << item\_num << endl;

}



void hp\_up() //메소드 : 클래스 내에 선언된 함수

{ //모험가 회복물약 사용

if (item\_num < 1)

{

cout <<  ">물약이 없습니다. " << endl;

return;

hp += 10;

hp\_item--;

cout << ">물약을 먹었습니다. " << endl;

cout << ">현재 HP : " << hp << endl;

cout << ">남은 물약 갯수 : " << hp\_item << endl;

}

}



void info() //메소드 : 클래스 내에 선언된 함수

{

cout << "< Information >" << endl;

cout << ">name : " << name << endl;

cout << ">HP\_item : " << hp\_item << endl;

cout << ">HP : " << hp << endl;

